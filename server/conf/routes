# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# POST    /upload                     controllers.Application.upload
# GET     /process                    controllers.Application.process
# POST    /download                   controllers.Application.download
# GET     /stock                      controllers.Application.stock
# GET     /themes                     controllers.Application.themes

GET     /storage/*file              @controllers.ExternalAssets.at(path="storage", file)
GET     /assets/*file               @controllers.Assets.at(path="/public", file)


# POST    /dropbox                    controllers.Application.dropbox

# GET     /questions                  controllers.Application.questions
# POST    /feedback                   controllers.Application.feedback
# POST    /textfeedback               controllers.Feedback.textFeedback
# GET     /reset                      controllers.Application.reset
# POST    /contact                    controllers.Application.contact



# GET     /users                      @controllers.Users.list
# POST    /users                      @controllers.Users.save
# GET     /users/:id                  @controllers.Users.get(id: Long)
# DELETE  /users/:id                  @controllers.Users.delete(id: Long)
# GET     /users/:id/collections      @controllers.Collections.fromUser(id: Long)
# GET     /users/:id/collections      @controllers.Collections.getAlbumFromHash(id: Long, hash: String)
# POST    /users/:id/collections      @controllers.Collections.withUser(id: Long)
# POST    /users/:id/link/:hash        @controllers.Collections.emailLink(id: Long, hash: String)

# POST    /users/:id/send/:mid        controllers.Users.send(id, mid)

# GET     /users/:id/albums/:hash      @controllers.Collections.getAlbumFromHash(id: Long, hash: String)

# GET     /collections                controllers.Collections.list
# POST    /collections                controllers.Collections.create
# GET     /collections/:id            controllers.Collections.get(id)
# GET     /collections/:id/album        controllers.Collections.getAlbum(id: Long)
# DELETE  /collections/:id            controllers.Collections.delete(id)
# POST    /collections/:id/users/:uid controllers.Collections.addUser(id, uid)
# DELETE  /collections/:id/users/:uid controllers.Collections.removeUser(id, uid)
# POST     /collections/:id/download    @controllers.Collections.download(id: Long)
# GET     /collections/:id/photos     @controllers.Collections.getPhotos(id: Long)
POST    /collections/:id/photos     @controllers.Photos.addToCollection(id: Long)
# GET     /collections/:id/photos/:photo_id controllers.Collections.getPhoto(id, photo_id)
# DELETE  /collections/:id/photos/:photos_id  controllers.Collections.removePhoto(id, photo_id)

# GET     /collections/:id/pages      @controllers.Collections.getPages(id: Long)
# POST    /collections/:id/page/:pageID     @controllers.Collections.shufflePage(id: Long, pageID: Long)
# POST    /collections/:id/pages    @controllers.Collections.generatePage(id: Long, index: Int)
# POST    /mosaics/generate           @controllers.Collections.generate
#

# POST /save  @controllers.Collections.saveAlbum

# GET /client_token @controllers.Payment.getToken
# POST /order @controllers.Payment.submitOrder

GET     /photos/:photoID/:region/:size/:rotation/:quality.:format     @controllers.Photos.get(photoID: Long, region, size, rotation, quality, format)

GET /pdf/:fold/:width/:hash                      @controllers.Application.pdf(hash: String, fold: Int, width: Int)

POST     /api/*path                  @controllers.Application.autowireApi(path: String)

GET     /ui                         @controllers.Application.ui
GET     /ui/:hash                   @controllers.Application.uiWithHash(hash: String)
GET     /                           @controllers.Application.index(lang: Option[String])
